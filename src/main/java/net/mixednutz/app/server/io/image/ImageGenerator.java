/**
 * 
 */
package net.mixednutz.app.server.io.image;

import java.io.File;
import java.io.InputStream;

import net.mixednutz.app.server.io.domain.PersistableFile;

/**
 * @author Andy
 *
 */
public interface ImageGenerator {
	
	/**
	 * Used to register the ImageGenerator
	 * 
	 * @return
	 */
	String getMimeType();
	
	/**
	 * Deletes an image generated by this interface
	 * 
	 * @param filename
	 */
	public boolean deleteImage(String filename);
	
	public InputStream resize(final InputStream stream, int width, int height);
	
	/**
	 * Rotates and image and places the result in the temp directory.
	 * 
	 * @param stream
	 * @param angleInDegrees
	 * @return
	 */
	public File rotateImage(final InputStream stream, int angleInDegrees);
	
	/**
	 * Generates a thumbnail sized icon
	 * 
	 * @param file
	 * @return
	 */
	public File generateThumbnail(PersistableFile file);
	
	/**
	 * Generates an avatar sized icon
	 * 
	 * @param file
	 * @return
	 */
	public String generateAvatar(PersistableFile file);
	
	/**
	 * Generates a smaller avatar size
	 * 
	 * @param file
	 * @return
	 */
	public String generateSmallAvatar(final PersistableFile file);
	
	/**
	 * Generates a larger avatar size
	 * 
	 * @param file
	 * @return
	 */
	public File generateLargeAvatar(final PersistableFile file);
	
	/**
	 * Generates a larger avatar size
	 * 
	 * @param file
	 * @return
	 */
	public String generateXLargeAvatar(final PersistableFile file);
	
	/**
	 * Generates an tiny image for progressive image loading of Large images
	 * 
	 * @param file
	 * @return
	 */
	public File generateTinyFeature(final PersistableFile file);
	
	/**
	 * Generates an image slightly larger than a thumbnail icon
	 * 
	 * @param file
	 * @return
	 */
	public File generateSmallFeature(PersistableFile file);
		
	/**
	 * Generates an image the size of a column
	 * 
	 * @param file
	 * @return
	 */
	public String generateMediumFeature(PersistableFile file);
	
	/**
	 * Generates an image the size of the page
	 * 
	 * @param file
	 * @return
	 */
	public File generateLargeFeature(PersistableFile file);
	
	
	/**
	 * Gets the destination filename for a file
	 * 
	 * @param file
	 * @return
	 */
	public File getLargeAvatarFilename(String basefilename);
	
	/**
	 * Gets the destination filename for a file
	 * 
	 * @param file
	 * @return
	 */
	public File getTinyFeatureFilename(String basefilename);
	
	/**
	 * Gets the destination filename for a file
	 * 
	 * @param file
	 * @return
	 */
	public File getSmallFeatureFilename(String basefilename);
	
	/**
	 * Gets the destination filename for a file
	 * 
	 * @param file
	 * @return
	 */
	public File getLargeFeatureFilename(String basefilename);
	
}
